close all
clear all
load simulation.mat

dt = 0.01;

dzdt = s_RK4(3,:);
z = s_RK4(6,:);

p = s_RK4(7,:);
q = s_RK4(8,:);
r = s_RK4(9,:);

T = u_vec(1,:)';
M_x = u_vec(2,:)';
M_y = u_vec(3,:)';

N = length(z);

for i = 1:N-1
    dpdt(i) = (p(i+1) - p(i))/dt;
    dqdt(i) = (q(i+1) - q(i))/dt;
    W(i,:) = [dpdt(i) p(i)*r(i) T(i)];
    
%     W(i,:) = [dsdt(7,i+1) p(i)*r(i) T(i)];
    if i < N-3
    for j = 1:3
        A = W(j+i:j+i+2)
end

figure(1)
subplot(2,3,1)
plot(dpdt(1:100))
hold on
plot(dsdt(7,2:101))
legend('dpdt(diff)','dpdt(ODE)')

subplot(2,3,2)
plot(dqdt(2:100))
hold on
plot(dsdt(8,3:101))
legend('dqdt(diff)','dqdt(ODE)')


subplot(2,3,4)
plot(dpdt(2:100)-dsdt(7,3:101))

A = W(30:32,:);
b = M_x(30:32);

% [U S V] = svd(A)
[V D] =eig(A'*A);
v1 = V(:,1)
v2 = V(:,2)
v3 = V(:,3)
s1 = sqrt(D(3,3)/D(2,2))

Ab=A'*b;

lp = D(3,3)*v3;
% Lambda_inv_ = 1/D(3,3)^2;
Lambda_inv = diag([1/D(2,2) 1/D(3,3)]);
% c = Lambda_inv_*[D(3,3)*v3']*Ab
c = Lambda_inv*[v2';v3']*Ab
solution = [v2 v3]*c

% c(1)*v3

% [U2 S2 V2] = svd(A2)
% [V2 D2] =eig(A2'*A2)

% gaussian_reduction(A2)
% A3 = W(4:7,:);


% [V D] = eig(A2'*A2);
% [V_ D_] = eig(A3'*A3)

% V*inv(D)*V'*A2'*M_x(4:6)